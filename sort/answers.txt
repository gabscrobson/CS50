sort1 uses: bubble sort

How do you know?: Sort1 is the slowest when used in random lists, but the fastest in the best-case scenarios, indicating that it has O(n^2) and Ω(n) just like bubble sort.

sort2 uses: merge sort

How do you know?: The difference between the speed of sort2 compared to other sorts increases when more numbers are added to the list indicating that it has O(n log n) just like merge sort.

sort3 uses: selection sort

How do you know?: Since sort2 is faster than sort1 in most cases except the best-case scenarios, everything leads to the conclusion that it has O(n^2) and Ω(n^2) just like selection sort.
